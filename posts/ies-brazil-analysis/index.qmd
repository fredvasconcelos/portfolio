---
title: "IES Analysis Brazil"
author: "Fred Vasconcelos"
date: "2023-07-31"
categories: [education, analysis, r, ggplot2]
image: "image.jpg"
---

# IES Analysis Brazil

```{r setup, include=FALSE, message=FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, fig.width = 8, fig.height = 6, out.width = '50%')

```

# ETL

## Load libraries

```{r}
library(tidyverse)
library(rstatix)
library(ggplot2)
library(factoextra)
library(ggrepel)
library(cluster)
library(ggthemes)
```

## Load data

We create a list of data frames for faster de creation of the data.

```{r, echo=FALSE}
file_paths <- fs::dir_ls("/home/fredvasconcelos/Documentos/educacao/alunos/2009_2021/")

#df_2021 <- read.csv('/home/fredvasconcelos/Documentos/educacao/alunos/2009_2021/cursos_2021.CSV', sep = ';', encoding = 'latin1')

```

```{r}
listed_df <- file_paths %>%
  map(function (path) {
    read.csv(path, sep = ';', encoding = 'latin1')
  }) %>%
  tibble() 
```

## Feature enginering

The data frames don't have information about Regions and States of Brazil because. We get this information with the *IES CODE* in the **IES DATABASE**.

```{r, echo=F}
regions_states <- read.csv('/home/fredvasconcelos/Documentos/educacao/ies/ies_2021.CSV', sep = ';', encoding = 'latin1') %>%
  select(CO_IES, NO_UF = NO_UF_IES, NO_REGIAO = NO_REGIAO_IES) %>%
  janitor::clean_names()
```

## View data frame structure

```{r}
listed_df %>%
  unnest(cols = '.') %>%
  head()
```

## Describe variables

```{r}
listed_df %>%
  unnest(cols = '.') %>%
  skimr::skim()
```

### Create new data frames - profile students

```{r}
students <- listed_df %>%
  unnest(cols = '.') %>% # unlist and merge data.frames
  janitor::clean_names() %>%
  select(co_ies, nu_ano_censo, no_regiao, no_uf, starts_with('qt_in')) %>%
  right_join(regions_states, by = c('co_ies', 'no_regiao', 'no_uf')) %>%
  group_by(nu_ano_censo, no_regiao, no_uf) %>%
  summarise_all(sum, na.rm = T) %>%
  ungroup()
```

# Data analysis

## Time Series

### Students by sex - Brazil

```{r}
head(students) 
```

```{r}
students %>%
  mutate(data = zoo::as.yearmon(nu_ano_censo)) %>%
  group_by(data) %>%
  summarise_at(c('qt_ing_fem', 'qt_ing_masc'), sum) %>%
  gather('var', 'value', 2:3) %>%
  ggplot(aes(x = data, 
             y = value,
             linetype = factor(var, 
                        labels = c('Female', 'Male')),
             fill = factor(var, 
                        labels = c('Female', 'Male')))) +
  geom_bar(stat = 'identity', position = 'dodge') +
  geom_smooth(method = 'loess', col = 'black') +
  ggthemes::scale_fill_ptol() +
  ggthemes::theme_clean() +
  guides(fill = guide_legend('Sex'),
         linetype = guide_legend('Sex')) +
  xlab('') +
  scale_y_continuous(name = 'Number of students admitted', 
                     labels = scales::label_number(suffix = "K", scale = 1e-3, big.mark = '.'),
                     breaks = seq(0,1500000, by = 250000)) +
  ggtitle('Number of Students by sex')
```

### Students by time - Regions

```{r}
students %>%
  mutate(data = zoo::as.yearmon(nu_ano_censo)) %>%
  group_by(data, no_regiao) %>%
  summarise_at(c('qt_ing_fem', 'qt_ing_masc'), sum) %>%
  gather('var', 'value', 3:4) %>%
  ggplot(aes(x = data, 
             y = value,
             linetype = factor(var, 
                        labels = c('Female', 'Male')),
             fill = factor(var, 
                        labels = c('Female', 'Male')))) +
  geom_bar(stat = 'identity', position = 'dodge') +
  geom_smooth(method = 'loess', col = 'black') +
  facet_wrap(~ no_regiao, scales = 'free_y') +
  ggthemes::scale_fill_ptol() +
  ggthemes::theme_clean() +
  guides(fill = guide_legend('Sex'),
         linetype = guide_legend('Sex')) +
  xlab('') +
  scale_y_continuous(name = 'Number of students admitted', 
                     labels = scales::label_number(suffix = " K", scale = 1e-3)) +
  ggtitle('Number of Students by sex and Region')
```

### Students by time - States

```{r, fig.height=10, fig.width=14}
students %>%
  mutate(data = zoo::as.yearmon(nu_ano_censo)) %>%
  group_by(data, no_uf) %>%
  summarise_at(c('qt_ing_fem', 'qt_ing_masc'), sum) %>%
  gather('var', 'value', 3:4) %>%
  ggplot(aes(x = data, 
             y = value,
             linetype = factor(var, 
                        labels = c('Female', 'Male')),
             fill = factor(var, 
                        labels = c('Female', 'Male')))) +
  geom_bar(stat = 'identity', position = 'dodge') +
  geom_smooth(method = 'loess', col = 'black') +
  facet_wrap(~ no_uf, scales = 'free_y') +
  ggthemes::scale_fill_ptol() +
  ggthemes::theme_clean() +
  guides(fill = guide_legend('Sex'),
         linetype = guide_legend('Sex')) +
  xlab('') +
  scale_y_continuous(name = 'Number of students admitted', 
                     labels = scales::label_number(suffix = " K", scale = 1e-3)) +
  ggtitle('Number of Students by sex and States')
```

### Students by ethnic group - Brazil

We use the IBGE's ethnicity classification. Link: <https://educa.ibge.gov.br/jovens/conheca-o-brasil/populacao/18319-cor-ou-raca.html>

```{r}
students %>%
  mutate(data = zoo::as.yearmon(nu_ano_censo)) %>%
  group_by(data) %>%
  summarise_at(c('qt_ing_branca', 'qt_ing_preta', 'qt_ing_indigena',
                 'qt_ing_parda', 'qt_ing_amarela', 'qt_ing_cornd'), sum) %>%
  gather('var', 'value', 2:7) %>%
  mutate(var = case_when(var == 'qt_ing_branca' ~ 'White',
                         var == 'qt_ing_preta' ~ 'Black',
                         var == 'qt_ing_indigena' ~ 'Indigenous',
                         var == 'qt_ing_parda' ~ 'Brown', 
                         var == 'qt_ing_amarela' ~ 'Asian', 
                         var == 'qt_ing_cornd' ~ 'Not\nDefined')) %>%
  ggplot(aes(x = data, 
             y = value,
             linetype = var,
             fill = var)) +
  geom_bar(stat = 'identity', position = 'dodge') +
  geom_smooth(method = 'loess', col = 'black') +
  ggthemes::scale_fill_ptol() +
  ggthemes::theme_clean() +
  facet_wrap( ~ var, scales = 'free_y') +
  guides(fill = F,
         linetype = F) +
  xlab('') +
  scale_y_continuous(name = 'Number of students admitted', 
                     labels = scales::label_number(suffix = "K", scale = 1e-3, big.mark = '.')) +
  ggtitle('Number of Students by ethnic group')
```

### Students by ethnic group - Regions

```{r, fig.height=12, fig.width=8}
students %>%
  mutate(data = zoo::as.yearmon(nu_ano_censo)) %>%
  group_by(data, no_regiao) %>%
  summarise_at(c('qt_ing_branca', 'qt_ing_preta', 'qt_ing_indigena',
                 'qt_ing_parda', 'qt_ing_amarela', 'qt_ing_cornd'), sum) %>%
  gather('var', 'value', 3:8) %>%
  mutate(var = case_when(var == 'qt_ing_branca' ~ 'White',
                         var == 'qt_ing_preta' ~ 'Black',
                         var == 'qt_ing_indigena' ~ 'Indigenous',
                         var == 'qt_ing_parda' ~ 'Brown', 
                         var == 'qt_ing_amarela' ~ 'Asian', 
                         var == 'qt_ing_cornd' ~ 'Not\nDefined')) %>%
  ggplot(aes(x = data, 
             y = value,
             linetype = var,
             fill = var)) +
  geom_bar(stat = 'identity', position = 'dodge') +
  geom_smooth(method = 'loess', col = 'black') +
  ggthemes::scale_fill_ptol() +
  ggthemes::theme_clean() +
  facet_grid(var ~ no_regiao, scales = 'free_y') +
  guides(fill = F,
         linetype = F) +
  xlab('') +
  scale_y_continuous(name = 'Number of students admitted', 
                     labels = scales::label_number(suffix = "K", scale = 1e-3, big.mark = '.')) +
  ggtitle('Number of Students by ethnic group and Region')
```

### Students by age - Brazil

```{r}
students %>%
  mutate(data = zoo::as.yearmon(nu_ano_censo)) %>%
  group_by(data) %>%
  summarise_at(c("qt_ing_0_17", "qt_ing_18_24", "qt_ing_25_29", "qt_ing_30_34",
                 "qt_ing_35_39", "qt_ing_40_49", "qt_ing_50_59", "qt_ing_60_mais"), sum) %>%
  gather('var', 'value', 2:9) %>%
  mutate(var = case_when(var == 'qt_ing_0_17' ~ '<18',
                         var == 'qt_ing_18_24' ~ '18~24',
                         var == 'qt_ing_25_29' ~ '25~29',
                         var == 'qt_ing_30_34' ~ '30~34', 
                         var == 'qt_ing_35_39' ~ '35~39', 
                         var == 'qt_ing_40_49' ~ '40~49',
                         var == 'qt_ing_50_59' ~ '50~59',
                         var == 'qt_ing_60_mais' ~ '>60'),
         var = fct_relevel(as.factor(var), '<18', '18~24', '25~29',
                           '30~34', '35~39', '40~49', 
                           '50~59', '>60')) %>%
  ggplot(aes(x = data, 
             y = value,
             linetype = var,
             fill = var)) +
  geom_bar(stat = 'identity', position = 'dodge') +
  geom_smooth(method = 'loess', col = 'black') +
  ggthemes::scale_fill_ptol() +
  ggthemes::theme_clean() +
  facet_wrap( ~ var, scales = 'free_y') +
  guides(fill = F,
         linetype = F) +
  xlab('') +
  scale_y_continuous(name = 'Number of students admitted', 
                     labels = scales::label_number(suffix = "K", scale = 1e-3, big.mark = '.')) +
  ggtitle('Number of Students by age')
```

### Students by ethnic group - Regions

```{r, fig.height=12, fig.width=8}
students %>%
  mutate(data = zoo::as.yearmon(nu_ano_censo)) %>%
  group_by(data, no_regiao) %>%
  summarise_at(c("qt_ing_0_17", "qt_ing_18_24", "qt_ing_25_29", "qt_ing_30_34",
                 "qt_ing_35_39", "qt_ing_40_49", "qt_ing_50_59", "qt_ing_60_mais"), sum) %>%
  gather('var', 'value', 3:10) %>%
  mutate(var = case_when(var == 'qt_ing_0_17' ~ '<18',
                         var == 'qt_ing_18_24' ~ '18~24',
                         var == 'qt_ing_25_29' ~ '25~29',
                         var == 'qt_ing_30_34' ~ '30~34', 
                         var == 'qt_ing_35_39' ~ '35~39', 
                         var == 'qt_ing_40_49' ~ '40~49',
                         var == 'qt_ing_50_59' ~ '50~59',
                         var == 'qt_ing_60_mais' ~ '>60'),
         var = fct_relevel(as.factor(var), '<18', '18~24', '25~29',
                           '30~34', '35~39', '40~49', 
                           '50~59', '>60')) %>%
  ggplot(aes(x = data, 
             y = value,
             linetype = var,
             fill = var)) +
  geom_bar(stat = 'identity', position = 'dodge') +
  geom_smooth(method = 'loess', col = 'black') +
  ggthemes::scale_fill_ptol() +
  ggthemes::theme_clean() +
  facet_grid(var ~ no_regiao, scales = 'free_y') +
  guides(fill = F,
         linetype = F) +
  xlab('') +
  scale_y_continuous(name = 'Number of students admitted', 
                     labels = scales::label_number(suffix = "K", scale = 1e-3, big.mark = '.')) +
  ggtitle('Number of Students by age')
```

## Statistical Analysis

### What explain the growth of students admmited around the years?

```{r}
stats_df <- students %>%
  mutate(data = zoo::as.yearmon(nu_ano_censo)) %>%
  group_by(data, no_regiao, no_uf) %>%
  summarise_if(is.numeric, sum) %>%
  ungroup() %>%
  select(data, no_regiao, no_uf, qt_ing_fem:qt_ing_noturno, qt_ing_0_17:qt_ing_cornd, qt_ing_financ:qt_ing_apoio_social) %>%
  gather('var', 'value', 4:42) %>%
  group_by(data, no_regiao, no_uf, var) %>%
  summarise_if(is.numeric, sum) %>%
  ungroup()
```

```{r, echo=F}
labels_table_model <- c(`(Intercept)` = 'Intercept',
                        `as.factor(var)qt_ing_fem` = 'Sex (Female)',
                        `as.factor(var)qt_ing_masc` = 'Sex (Male)',
                        `as.factor(var)qt_ing_amarela` = 'Ethnic (Asian)',
                        `as.factor(var)qt_ing_branca` = 'Ethnic (White)',
                        `as.factor(var)qt_ing_parda` = 'Ethnic (Brown)',
                        `as.factor(var)qt_ing_preta` = 'Ethnic (Black)',
                        `as.factor(var)qt_ing_indigena` = 'Ethnic (Indigenous)',
                        `as.factor(var)qt_ing_cornd` = 'Ethnic (Not declared)',
                        `as.factor(var)qt_ing_0_17` = 'Age (<18)',
                        `as.factor(var)qt_ing_18_24` = 'Age (18~24)', 
                        `as.factor(var)qt_ing_25_29` = 'Age (25~29)', 
                        `as.factor(var)qt_ing_30_34` = 'Age (30~34)', 
                        `as.factor(var)qt_ing_35_39` = 'Age (35~39)', 
                        `as.factor(var)qt_ing_40_49` = 'Age (40~49)', 
                        `as.factor(var)qt_ing_50_59` = 'Age (50~59)', 
                        `as.factor(var)qt_ing_60_mais` = 'Age (>60)',
                        `as.factor(var)qt_ing_diurno` = 'Shift (Diurnal)',
                        `as.factor(var)qt_ing_noturno` = 'Shift (Nocturnal)',
                        `as.factor(var)qt_ing_procescprivada` = 'Type high school (Private)',
                        `as.factor(var)qt_ing_procescpublica` = 'Type high school (Public)',
                        `as.factor(var)qt_ing_procnaoinformada` = 'Type high school (Not declared)',
                        `as.factor(var)qt_ing_apoio_social` = 'Any Social Support',
                        `as.factor(var)qt_ing_reserva_vaga` = 'Social Support (Quotas)',
                        `as.factor(var)qt_ing_rvetnico` = 'Social Support (Ethnic quotas)',
                        `as.factor(var)qt_ing_rvoutros` =  'Social Support (Other quotas)',
                        `as.factor(var)qt_ing_rvpdef` =  'Social Support (Disabilities quotas)',
                        `as.factor(var)qt_ing_rvredepublica` =  'Social Support (Public high school quotas)',
                        `as.factor(var)qt_ing_rvsocial_rf` =  'Social Support (Family income quotas)',
                        `as.factor(var)qt_ing_parfor` = 'Social Support (PARFOR)',
                        `as.factor(var)qt_ing_financ` = 'Income Support',
                        `as.factor(var)qt_ing_financ_nreemb` = 'Income Support (Non-refundable)', 
                        `as.factor(var)qt_ing_financ_nreemb_outros` = 'Income Support (Non-refundable others)',
                        `as.factor(var)qt_ing_financ_reemb` = 'Income Support (Refundable)', 
                        `as.factor(var)qt_ing_financ_reemb_outros` = 'Income Support (Refundable others)',
                        `as.factor(var)qt_ing_fies` = 'Income Support (FIES)',
                        `as.factor(var)qt_ing_rpfies` = 'Income Support (Refundable FIES)',
                        `as.factor(var)qt_ing_nrpfies` = 'Income Support (Non-refundable FIES)',
                        `as.factor(var)qt_ing_prounii` = 'Income Support (PROUNI whole)',
                        `as.factor(var)qt_ing_prounip` = 'Income Support (PROUNI parcial)',
                        data = 'Date',
                        `as.factor(no_regiao)Nordeste` = 'Region (Nordeste)',
                        `as.factor(no_regiao)Norte` = 'Region (Norte)',
                        `as.factor(no_regiao)Sudeste` = 'Region (Sudeste)',
                        `as.factor(no_regiao)Sul` = 'Region (Sul)',
                        `as.factor(no_uf)Alagoas` = 'State (Alagoas)',
                        `as.factor(no_uf)Amapá` = 'State (Amapá)',
                        `as.factor(no_uf)Amazonas` = 'State (Amazonas)',
                        `as.factor(no_uf)Bahia` = 'State (Bahia)',
                        `as.factor(no_uf)Ceará`	= 'State (Ceará)',
                        `as.factor(no_uf)Distrito Federal` = 'State (Distrito Federal)',
                        `as.factor(no_uf)Espírito Santo` = 'State (Espirito Santo)',
                        `as.factor(no_uf)Goiás` = 'State (Goiás)',
                        `as.factor(no_uf)Maranhão` = 'State (Maranhão)',
                        `as.factor(no_uf)Mato Grosso` = 'State (Mato Grosso)',
                        `as.factor(no_uf)Minas Gerais` = 'State (Minas Gerais)',
                        `as.factor(no_uf)Pará` = 'State (Pará)',
                        `as.factor(no_uf)Paraíba` = 'State (Paraíba)',
                        `as.factor(no_uf)Paraná` = 'State (Paraná)',
                        `as.factor(no_uf)Pernambuco` = 'State (Alagoas)',
                        `as.factor(no_uf)Piauí` = 'State (Pernambuco)',
                        `as.factor(no_uf)Rio de Janeiro` = 'State (Rio de Janeiro)',
                        `as.factor(no_uf)Rio Grande do Norte` = 'State (Rio Grande do Norte)',
                        `as.factor(no_uf)Rio Grande do Sul` = 'State (Rio Grande do Sul)',
                        `as.factor(no_uf)Rondônia` = 'State (Rondônia)',
                        `as.factor(no_uf)Roraima` = 'State (Roraima)',
                        `as.factor(no_uf)Tocantins` = 'State (Tocantins)'
                        )
```

```{r}
stats_df %>%
  mutate(value = ifelse(value == 0, 1, value)) %>%
  lm(log(value) ~ as.factor(var) + data + as.factor(no_regiao) + as.factor(no_uf), data = .) %>%
  sjPlot::tab_model(show.ci = F, show.est = T, show.se = T, show.r2 = T, show.stat = T,
                    pred.labels = labels_table_model,
                    dv.labels = 'Relationship between number of students admitted')
```

## Cluster Analysis

### Region and Sex

```{r}
cluster_regiao_sex <- stats_df %>%
  pivot_wider(names_from = var, values_from = value) %>%
  group_by(no_regiao) %>%
  summarise_if(is.numeric, sum) %>%
  select(no_regiao, Male = qt_ing_masc, Female = qt_ing_fem)

names_cluster_regiao_sex <- cluster_regiao_sex$no_regiao

cluster_regiao_sex <- scale(cluster_regiao_sex[,2:3])

rownames(cluster_regiao_sex) <- names_cluster_regiao_sex
```

> Determine numbers of clusters  with 1000 boostraping Monte-Carlo's method. **The highest GAP value determines the number of clusters

```{r}
clusGap(cluster_regiao_sex, FUN = kmeans, K.max = 4, B = 1000)
```


```{r}
fviz_cluster(kmeans(cluster_regiao_sex, 4, nstart = 25), cluster_regiao_sex[,1:2], ellipse.type = "norm", 
             repel = T, ggtheme = ggthemes::theme_clean(), palette = c('#4477AA', '#CC6677', '#117733', '#AA4499'),
             main = 'Grouping by Regions and Sex')

```

### States and Sex

```{r}
cluster_uf_sex <- stats_df %>%
  pivot_wider(names_from = var, values_from = value) %>%
  group_by(no_uf) %>%
  summarise_if(is.numeric, sum) %>%
  select(no_uf, Male = qt_ing_masc, Female = qt_ing_fem) %>%
  ungroup()

names_cluster_uf_sex <- cluster_uf_sex$no_uf

cluster_uf_sex <- scale(cluster_uf_sex[,2:3])

rownames(cluster_uf_sex) <- names_cluster_uf_sex
```

```{r}
clusGap(cluster_uf_sex, FUN = kmeans, K.max = 10, B = 1000)
```


```{r}
fviz_cluster(kmeans(cluster_uf_sex, 7, nstart = 25), cluster_uf_sex, ellipse.type = "norm", 
             repel = T, ggtheme = ggthemes::theme_clean(), palette = c('#4477AA', '#CC6677', '#117733', '#DDCC77', '#AA4499', '#661100', '#44AA99'),
             main = 'Grouping by States and Sex')

```

### Region and Ethnic group

```{r}
cluster_regiao_ethnic <- stats_df %>%
  pivot_wider(names_from = var, values_from = value) %>%
  group_by(no_regiao) %>%
  summarise_if(is.numeric, sum) %>%
  select(no_regiao, 
         White = qt_ing_branca, 
         Black = qt_ing_preta,
         Brown = qt_ing_parda,
         Asian = qt_ing_amarela,
         Not_declared = qt_ing_cornd) %>%
  ungroup()

names_cluster_regiao_ethnic <- cluster_regiao_ethnic$no_regiao

cluster_regiao_ethnic <- scale(cluster_regiao_ethnic[,2:6])

rownames(cluster_regiao_ethnic) <- names_cluster_regiao_ethnic
```

```{r}
clusGap(cluster_regiao_ethnic, FUN = kmeans, K.max = 4, B = 1000)
```

```{r}
fviz_cluster(kmeans(cluster_regiao_ethnic, 4, nstart = 25), cluster_regiao_ethnic, ellipse.type = "norm", 
             repel = T, ggtheme = ggthemes::theme_clean(), palette = c('#4477AA', '#CC6677', '#117733', '#AA4499'),
             main = 'Grouping by Regions and Ethnic group')

```

### States and ethnic group

````{r}
cluster_uf_ethnic <- stats_df %>%
  pivot_wider(names_from = var, values_from = value) %>%
  group_by(no_uf) %>%
  summarise_if(is.numeric, sum) %>%
  select(no_uf, 
         White = qt_ing_branca, 
         Black = qt_ing_preta,
         Brown = qt_ing_parda,
         Asian = qt_ing_amarela,
         Not_declared = qt_ing_cornd) %>%
  ungroup()

names_cluster_uf_ethnic <- cluster_uf_ethnic$no_uf

cluster_uf_ethnic <- scale(cluster_uf_ethnic[,2:6])

rownames(cluster_uf_ethnic) <- names_cluster_uf_ethnic
```

```{r}
clusGap(cluster_uf_ethnic, FUN = kmeans, K.max = 10, B = 1000)
```

````{r}
fviz_cluster(kmeans(cluster_uf_ethnic, 9, nstart = 25), cluster_uf_ethnic, ellipse.type = "norm", 
             repel = T, ggtheme = ggthemes::theme_clean(), palette = c('#4477AA', '#CC6677', '#117733', '#DDCC77', '#AA4499', '#661100', '#44AA99', '#332288', '#AA4466'),
             main = 'Grouping by States and Ethnic group')

```

